type NFTOwnership = 
 record {
   bookId: nat;
   owner: principal;
   resalePrice: opt nat;
 };
type BookCreatedEvent = 
 record {
   author: text;
   authorAddress: principal;
   id: nat;
   initialRoyalty: nat;
   name: text;
   price: nat;
   resaleRoyalty: nat;
   totalSupply: nat;
 };
type Book = 
 record {
   author: text;
   authorAddress: principal;
   id: nat;
   initialRoyalty: nat;
   name: text;
   price: nat;
   resaleRoyalty: nat;
   totalSupply: nat;
   transactionCount: nat;
 };
service : {
  buyNFT: (nat) -> (NFTOwnership);
  buyResaleNFT: (nat, principal) -> (NFTOwnership);
  cancelResalePrice: (nat) -> (NFTOwnership);
  createBook: (nat, text, text, principal, nat, nat, nat, nat) ->
   (BookCreatedEvent);
  getAllBooks: () -> (vec Book) query;
  getBook: (nat) -> (opt Book) query;
  getNFTPurchaseInfo: (nat) -> (opt record {
                                      nat;
                                      nat;
                                    }) query;
  getUniqueOwners: (nat) -> (nat) query;
  setResalePrice: (nat, nat) -> (NFTOwnership);
  transferNFT: (nat, principal) -> (NFTOwnership);
}
